user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
# ----------- MIME Types

    include /etc/nginx/mime.types;
    types { # Extend mime types
        font/truetype ttf;
        font/opentype otf;
    }
    default_type  application/octet-stream;

# ----------- Logs

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" cs=$upstream_cache_status';

    # define where Nginx should write its logs
    access_log $LOG_DIR/nginx.access.log main buffer=16k;
    error_log $LOG_DIR/nginx.error.log;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

# ----------- GZIP

    gzip  on;
    gzip_disable "MSIE [1-6]\.";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_buffers 16 128k;
    gzip_http_version 1.0;
    gzip_types image/svg+xml text/plain text/css application/json application/x-javascript application/javascript text/xml application/xml application/xml+rss text/javascript text/x-component font/truetype font/opentype;

# ----------- Proxy Caching

    proxy_cache_path /tmp/nginx_api_cache levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_key $scheme$proxy_host$uri$is_args$args; # Set cache key to include identifying components
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404 1m;

# ----------- Main Context Configs

    include /etc/nginx/sites-enabled/*.main*.conf;

# ----------- HTTPS Server

    server {
        # expect SSL requests, try to use HTTP2
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        # define our domain
        server_name $HOST_NAME;

        # HSTS header
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # CSP header
        add_header Content-Security-Policy "default-src 'unsafe-inline' 'unsafe-eval' https:; upgrade-insecure-requests; report-uri https://nealcodes.report-uri.io/r/default/csp/enforce;" always;

        add_header Referrer-Policy "origin, strict-origin" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Xss-Protection "1; mode=block" always;
        add_header X-Frame-Options "SAMEORIGIN" always;

        # configure SSL
        ssl_certificate $SSL_CERT_HOME/fullchain.pem;
        ssl_certificate_key $SSL_CERT_HOME/privkey.pem;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_dhparam $SSL_CERT_HOME/dhparam.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
        ssl_prefer_server_ciphers on;

        # ----------- Location Context Configs
        include /etc/nginx/sites-enabled/*.location*.conf;
    }

# ----------- HTTP Server

    server {
        # many clients will send unencrypted requests
        listen 80;
        listen [::]:80;

        # accept unencrypted ACME challenge requests
        location ^~ /.well-known {
            allow all;
            auth_basic off;
            alias $SSL_ROOT/.well-known;
        }

        # force insecure requests through SSL
        location / {
            return 301 https://$host$request_uri;
        }
    }

}