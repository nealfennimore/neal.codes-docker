# This is a template. Referenced variables (e.g. $ROOT_DIR) need
# to be rewritten with real values in order for this file to work.
# To learn about all the directives used here, and more, see
# http://nginx.org/en/docs/dirindex.html

# define our application server
upstream app_upstream {
   server app:$APP_PORT;
}

server {
  # expect SSL requests, try to use HTTP2
  listen 443 ssl http2;

  # define our domain
  server_name $HOST_NAME;

  # configure SSL
  ssl_certificate $SSL_CERT_HOME/fullchain.pem;
  ssl_certificate_key $SSL_CERT_HOME/privkey.pem;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;
  ssl_dhparam $SSL_CERT_HOME/dhparam.pem;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_prefer_server_ciphers on;


  # define the public application root
  root $ROOT_DIR/$APP_ASSET_DIR;
  # index  index.html;

  # define where Nginx should write its logs
  access_log $LOG_DIR/nginx.access.log;
  error_log $LOG_DIR/nginx.error.log;

  # deny requests for files that should never be accessed
  # location ~ /\. {
  #   deny all;
  # }
  #
  # location ~* ^.+\.(rb|log)$ {
  #   deny all;
  # }

  # serve static (compiled) assets directly if they exist (for app production)
  # location ~ ^/($APP_ASSET_DIR) {
  #   root   $ROOT_DIR/$APP_ASSET_DIR;
  #   try_files $uri $uri/ =404;
    #
    # access_log off;
    # gzip_static on; # to serve pre-gzipped version
    #
    # expires max;
    # add_header Cache-Control public;
    #
    # # Some browsers still send conditional-GET requests if there's a
    # # Last-Modified header or an ETag header even if they haven't
    # # reached the expiry date sent in the Expires header.
    # add_header Last-Modified "";
    # add_header ETag "";
    # break;
  # }

  # send non-static file requests to the app server
  location / {
    try_files $uri @express;
  }

  location @express {
    proxy_pass http://app_upstream;
    proxy_redirect off;

    # prevent infinite request loop
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_set_header  X-Real-IP  $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;

    # Websockets dev mode
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}

server {
  # many clients will send unencrypted requests
  listen 80;

  # accept unencrypted ACME challenge requests
  location ^~ /.well-known/acme-challenge {
    alias $SSL_ROOT/.well-known/acme-challenge/;
  }

  # force insecure requests through SSL
  location / {
    return 301 https://$host$request_uri;
  }
}
